
Allocating common symbols
Common symbol       size              file

p                   0x4               main.o
p2                  0x4               main.o
msec                0x4               soc-hw.o
isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0x578
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208       0xb8 main.o
                0x0000000000000208                writeint
                0x0000000000000268                test2
                0x0000000000000284                test
                0x00000000000002ac                main
 .text          0x00000000000002c0      0x2b8 soc-hw.o
                0x00000000000002c0                isr_null
                0x00000000000002c4                irq_handler
                0x0000000000000328                isr_init
                0x000000000000034c                isr_register
                0x0000000000000364                isr_unregister
                0x0000000000000384                msleep
                0x00000000000003c8                nsleep
                0x0000000000000420                tic_init
                0x000000000000045c                uart_init
                0x0000000000000460                uart_getchar
                0x0000000000000484                uart_putchar
                0x00000000000004a8                uart_putstr
                0x00000000000004dc                tic_isr
                0x0000000000000524                prueba
                0x0000000000000578                _etext = .

.rodata         0x0000000000000578       0x18
                0x0000000000000578                . = ALIGN (0x4)
                0x0000000000000578                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x0000000000000578        0x8 soc-hw.o
                                          0xc (size before relaxing)
 .rodata.str1.4
                0x0000000000000580       0x10 soc-hw.o
 *(.rodata1)
                0x0000000000000590                _erodata = .

.data           0x0000000000000590       0x18
                0x0000000000000590                . = ALIGN (0x4)
                0x0000000000000590                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000590        0x0 crt0ram.o
 .data          0x0000000000000590        0x8 main.o
                0x0000000000000590                glob
 .data          0x0000000000000598       0x10 soc-hw.o
                0x0000000000000598                spi0
                0x000000000000059c                gpio0
                0x00000000000005a0                timer0
                0x00000000000005a4                uart0
 *(.data1)
                0x00000000000005b0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000000000005a8                _edata = .

.bss            0x00000000000005a8       0x90
                0x00000000000005a8                . = ALIGN (0x4)
                0x00000000000005a8                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000005a8        0x0 crt0ram.o
 .bss           0x00000000000005a8        0x0 main.o
 .bss           0x00000000000005a8        0x0 soc-hw.o
 *(COMMON)
 COMMON         0x00000000000005a8        0x8 main.o
                0x00000000000005a8                p
                0x00000000000005ac                p2
 COMMON         0x00000000000005b0       0x88 soc-hw.o
                0x00000000000005b0                msec
                0x00000000000005b4                isr_table
                0x0000000000000634                tic_msec
                0x0000000000000638                _ebss = .
                0x0000000000000638                _end = .
                0x0000000000000ffc                PROVIDE (_fstack, ((ORIGIN (ram) + 0x1000) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x0000000000000000      0x2f4
 .debug_abbrev  0x0000000000000000      0x157 main.o
 .debug_abbrev  0x0000000000000157      0x19d soc-hw.o

.debug_info     0x0000000000000000      0x78e
 .debug_info    0x0000000000000000      0x269 main.o
 .debug_info    0x0000000000000269      0x525 soc-hw.o

.debug_line     0x0000000000000000      0x3af
 .debug_line    0x0000000000000000       0xe2 main.o
 .debug_line    0x00000000000000e2      0x2cd soc-hw.o

.debug_frame    0x0000000000000000      0x140
 .debug_frame   0x0000000000000000       0x50 main.o
 .debug_frame   0x0000000000000050       0xf0 soc-hw.o

.debug_loc      0x0000000000000000      0x197
 .debug_loc     0x0000000000000000       0x63 main.o
 .debug_loc     0x0000000000000063      0x134 soc-hw.o

.debug_pubnames
                0x0000000000000000      0x177
 .debug_pubnames
                0x0000000000000000       0x51 main.o
 .debug_pubnames
                0x0000000000000051      0x126 soc-hw.o

.debug_pubtypes
                0x0000000000000000       0x8f
 .debug_pubtypes
                0x0000000000000000       0x36 main.o
 .debug_pubtypes
                0x0000000000000036       0x59 soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_str      0x0000000000000000      0x24a
 .debug_str     0x0000000000000000       0xef main.o
                                        0x105 (size before relaxing)
 .debug_str     0x00000000000000ef      0x15b soc-hw.o
                                        0x1d1 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 soc-hw.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 soc-hw.o
